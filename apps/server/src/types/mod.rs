pub mod auth;
pub mod errors;
pub mod http;

use auth::AuthenticatedUser;
use errors::ApiError;

use stump_core::config::Ctx as StumpContext;

pub type Session<'a> = rocket_session_store::Session<'a, AuthenticatedUser>;
pub type Ctx = rocket::State<StumpContext>;
pub type ApiResult<T> = Result<T, ApiError>;

#[allow(unused_imports)]
mod tests {
	use std::{fs::File, io::Write, path::PathBuf};

	use specta::ts_export;

	use super::{auth::*, errors::*};

	#[test]
	fn codegen() -> Result<(), Box<dyn std::error::Error>> {
		let mut file = File::create(
			PathBuf::from(env!("CARGO_MANIFEST_DIR"))
				.join("../../core/bindings")
				.join("server.ts"),
		)?;

		file.write_all(b"// DO NOT MODIFY THIS FILE, IT IS AUTOGENERATED\n\n")?;

		file.write_all(format!("{}\n\n", ts_export::<ApiError>()?).as_bytes())?;

		Ok(())
	}
}
